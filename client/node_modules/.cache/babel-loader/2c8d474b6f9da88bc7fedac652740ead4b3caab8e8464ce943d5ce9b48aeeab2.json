{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\OneDrive\\\\Documents\\\\Repositories\\\\Weather_App\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport Today from '../components/Today';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [details, setDetails] = useState({\n    city: \"\",\n    state: \"\"\n  });\n  const weather = [];\n  const fetchFunction = async event => {\n    event.preventDefault();\n    try {\n      const response = await (await fetch(`https://api.geoapify.com/v1/geocode/search?city=${details.city}&state=${details.state}&format=json&apiKey=27a84d7b0c1b4d52b41acc3e82bbe239`)).json();\n      const weatherRes = await (await fetch(`https://api.tomorrow.io/v4/timelines?location=607f3e4188a6a60007947b82&fields=precipitationIntensity%2CprecipitationType%2CwindSpeed%2CwindGust%2CwindDirection%2Ctemperature%2CtemperatureApparent%2CcloudCover%2CcloudBase%2CcloudCeiling%2CweatherCode&units=metric&timesteps=1h&apikey=`\n      // `https://api.tomorrow.io/v4/timelines?location=${response.results[0].lat},${response.results[0].lon}&fields=temperature&timesteps&humidity&windSpeed&precipitationIntensity&precipitation&rainIntensityvisibility&cloudCover&uvIndex&weatherCode=1h&units=metric&apikey=OkVwrGemAXddKs3T0ruKtK4mPeYEemYy`\n      )).json();\n      weather.push(weatherRes);\n    } catch (error) {\n      console.log('eerr', error);\n    }\n    console.log('from function', weather);\n    return weather;\n  };\n  console.log('2nd weather', weather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      onSubmit: fetchFunction,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"City\",\n          type: \"text\",\n          name: \"city\",\n          onChange: e => setDetails(previousValue => ({\n            ...previousValue,\n            city: e.target.value\n          })),\n          value: details.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"State: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"State\",\n          type: \"text\",\n          name: \"state\",\n          onChange: e => setDetails(previousValue => ({\n            ...previousValue,\n            state: e.target.value\n          })),\n          value: details.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Today, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"bmr8K/nNJtM1HilQ6KxmG9rq868=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Today","Home","details","setDetails","city","state","weather","fetchFunction","event","preventDefault","response","fetch","json","weatherRes","push","error","console","log","e","previousValue","target","value"],"sources":["C:/Users/chris/OneDrive/Documents/Repositories/Weather_App/client/src/pages/Home.js"],"sourcesContent":["import {React, useState} from 'react'\r\nimport Today from '../components/Today'\r\n\r\nexport default function Home () {\r\n    const [details, setDetails] = useState({ city: \"\", state: \"\" });\r\n    const weather = [];\r\n    \r\n    const fetchFunction = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        try {\r\n            const response = await (await fetch(\r\n                `https://api.geoapify.com/v1/geocode/search?city=${details.city}&state=${details.state}&format=json&apiKey=27a84d7b0c1b4d52b41acc3e82bbe239`\r\n            )).json();\r\n\r\n            const weatherRes = await (await fetch(\r\n                `https://api.tomorrow.io/v4/timelines?location=607f3e4188a6a60007947b82&fields=precipitationIntensity%2CprecipitationType%2CwindSpeed%2CwindGust%2CwindDirection%2Ctemperature%2CtemperatureApparent%2CcloudCover%2CcloudBase%2CcloudCeiling%2CweatherCode&units=metric&timesteps=1h&apikey=`\r\n                // `https://api.tomorrow.io/v4/timelines?location=${response.results[0].lat},${response.results[0].lon}&fields=temperature&timesteps&humidity&windSpeed&precipitationIntensity&precipitation&rainIntensityvisibility&cloudCover&uvIndex&weatherCode=1h&units=metric&apikey=OkVwrGemAXddKs3T0ruKtK4mPeYEemYy`\r\n            )).json()\r\n            weather.push(weatherRes)\r\n        } catch (error) {\r\n            console.log('eerr', error);\r\n        }\r\n        console.log('from function', weather)\r\n        return weather\r\n    };\r\n    console.log('2nd weather', weather)\r\n\r\n    return (\r\n        <div>\r\n            <h4>Home</h4>\r\n            <form id=\"form\" onSubmit={fetchFunction}>\r\n                <p>\r\n                    <label htmlFor=\"city\">City: </label>\r\n                    <input\r\n                        placeholder=\"City\"\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        onChange={(e) =>\r\n                            setDetails((previousValue) => ({\r\n                                ...previousValue,\r\n                                city: e.target.value\r\n                            }))\r\n                        }\r\n                        value={details.city}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"state\">State: </label>\r\n                    <input\r\n                        placeholder=\"State\"\r\n                        type=\"text\"\r\n                        name=\"state\"\r\n                        onChange={(e) =>\r\n                            setDetails((previousValue) => ({\r\n                                ...previousValue,\r\n                                state: e.target.value\r\n                            }))\r\n                        }\r\n                        value={details.state}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </p>\r\n            </form>\r\n            <div>\r\n                <Today weather={weather}/>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\n"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AAAA;AAEvC,eAAe,SAASC,IAAI,GAAI;EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC;IAAEK,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC/D,MAAMC,OAAO,GAAG,EAAE;EAElB,MAAMC,aAAa,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;IAGtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM,CAAC,MAAMC,KAAK,CAC9B,mDAAkDT,OAAO,CAACE,IAAK,UAASF,OAAO,CAACG,KAAM,sDAAqD,CAC/I,EAAEO,IAAI,EAAE;MAET,MAAMC,UAAU,GAAG,MAAM,CAAC,MAAMF,KAAK,CAChC;MACD;MAAA,CACH,EAAEC,IAAI,EAAE;MACTN,OAAO,CAACQ,IAAI,CAACD,UAAU,CAAC;IAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,KAAK,CAAC;IAC9B;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,OAAO,CAAC;IACrC,OAAOA,OAAO;EAClB,CAAC;EACDU,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEX,OAAO,CAAC;EAEnC,oBACI;IAAA,wBACI;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACb;MAAM,EAAE,EAAC,MAAM;MAAC,QAAQ,EAAEC,aAAc;MAAA,wBACpC;QAAA,wBACI;UAAO,OAAO,EAAC,MAAM;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UACI,WAAW,EAAC,MAAM;UAClB,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,MAAM;UACX,QAAQ,EAAGW,CAAC,IACRf,UAAU,CAAEgB,aAAa,KAAM;YAC3B,GAAGA,aAAa;YAChBf,IAAI,EAAEc,CAAC,CAACE,MAAM,CAACC;UACnB,CAAC,CAAC,CACL;UACD,KAAK,EAAEnB,OAAO,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QACtB;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACJ;QAAA,wBACI;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eACtC;UACI,WAAW,EAAC,OAAO;UACnB,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,OAAO;UACZ,QAAQ,EAAGc,CAAC,IACRf,UAAU,CAAEgB,aAAa,KAAM;YAC3B,GAAGA,aAAa;YAChBd,KAAK,EAAEa,CAAC,CAACE,MAAM,CAACC;UACpB,CAAC,CAAC,CACL;UACD,KAAK,EAAEnB,OAAO,CAACG;QAAM;UAAA;UAAA;UAAA;QAAA,QACvB;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACJ;QAAA,uBACI;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACtC;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,eACP;MAAA,uBACI,QAAC,KAAK;QAAC,OAAO,EAAEC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GArEuBL,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}